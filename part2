function wt_s1(c_guess, maxLoop)
    g_inf = 3.2 * 10^18; % surface excess coverage (molecules/m2), which is 3.2 molecules/nm^2
    D =  2.5 * 10^(-10); % diffusion coefficient (m2/s)
    k =  1.44 * 10^(-17); % adsorption constant (m3/molecule)
    c0 = 3.08 * 10^22; % initial bulk concentration (molecules/m3)
    t = 0.01;
    c = (1 : maxLoop);

    time_axis = (1 : maxLoop);
    maxIteration = 1000000;
    
    time_axis(1) = 0;
    time_axis(2) = t;

    c(1) = 0;
    c(2) = c_guess;
    
    g1(1) = 0;
    g2_0(1) = 0;
    
    for n = 3 : maxLoop
        tn = t * (n-1);
        time_axis(n) = tn;
        
        %Step 1: make the first estimate
        c(n) =  c(n-1) + (c(n-1) - c(n-2));
        
        %disp(">>start loop");
        %disp(n);
        P1 = 0;
        P2 = 0;
        w = 0.0005;
        for i = 1 : (n - 1)
            P1 = P1 + 2 / 3 * (conc((n - i) * w) - conc((n - i - 1) * w)) * ((i + 1)^(3/2) - i^(3/2)) * sqrt(w);
            P2 = P2 + 2 * ((i + 1) * conc((n - i) * w) - i * conc((n - i - 1) * w)) * ((i + 1)^(1/2) - i^(1/2)) * sqrt(w);
        end
          %disp(P1);
          %disp(P2);    
          
        %Step 2: compute the g2(n)
        g1(n) = g_inf * k * conc(time_axis(n)) / (1 + k * conc(time_axis(n)));
        g2_0(n) = 2 * sqrt (D * time_axis(n) / pi) * c0;
        g2(n) = g2_0(n)+ (4 / 3 * conc(time_axis(n)) + 2 / 3 * conc((n - 1) * w)) * sqrt(w) - P1 + P2;
        %disp(g1);
        %disp(g2);
        %Step 3: make the second estimate
            
            %Step 4: check whether second estimates are within 1%
            %of first estimate
    end
    
    %disp('final');
    %disp(x);
    %disp('est 1.');
    %disp(x_1);
    %disp('est 2.');
    %disp(x_2);

    clf;
    
    % Plotting
    %plot(time_axis, c, 'blue');
    %hold on
    plot(time_axis, g1, 'red');
    hold on
    plot(time_axis, g2, 'black');
    grid on;
    xlabel('time (s)');
    ylabel('surface coverage (molecules/m2)/subsurface concentration (molecules/m3)');
    title('single component');
