% Binary system

D1 = 2.5E-10; % Diffusion coefficient (m2/s)
D2 = 2.5E-10; % Diffusion coefficient (m2/s)
gamma_m = 3.2E18; % Surface excess coverage (molecule/m2)
cb1 = 1.42E21; % Surface concentration (molecule/m3)
cb2 = 3.08E22; % Surface concentration (molecule/m3)
k1 = 9.47E-22; % Adsorption constant (m3/molecule)
k2 = 2.13E-19; % Adsorption constant (m3/molecule)
kb =  1.38E-23; % Boltzmann constant (m2.kg/(s2.K))
T = 298; % Temperature (K)
S0 = 0.036; % Clean surface tension (N/m)
syms x1 x2;

Q = 1000; % Total time (s)
W = 500; 
p = Q / W; % Discretizing time step
t = (1 : W+1);
c1 = (1 : W+1);
c2 = (1 : W+1);
gamma1 = (1 : W+1);
gamma2 = (1 : W+1);
S = (1 : W+1);

t(1) = 0;
gamma1(1) = 0;
gamma2(1) = 0;
c1(1) = 0;
c2(1) = 0;
S(1) = 0;

t(2) = 1;
gamma1(2) = 2 * cb1 * sqrt(D1 * p / pi);
gamma2(2) = 2 * cb2 * sqrt(D2 * p / pi);
c1(2) = 1/k2 * gamma1(2) / (gamma_m - gamma1(2) - gamma2(2));
c2(2) = 1/k1 * gamma2(2) / (gamma_m - gamma1(2) - gamma2(2));
S(2) = - kb * 298 * gamma_m * log10(1 - (gamma1(2) + gamma2(2)) / gamma_m);

for n = 3 : (W+1) 
    t(n) = (n - 1) * p;
    M1 = 0;
    M2 = 0;
    for i = 1 : (n - 1)
        alpha = (i + 1) ^ (1/2) - i ^ (1/2);
        beta = (i + 1) ^ (3/2) - i ^ (3/2);
        M1 = M1 + 2 * p ^ (1/2) * (c1(n-i+1) * alpha + (1/3 * beta - i * alpha) * (c1(n-i) - c1(n-i+1)));
        M2 = M1 + 2 * p ^ (1/2) * (c2(n-i+1) * alpha + (1/3 * beta - i * alpha) * (c2(n-i) - c2(n-i+1)));
    end
    
    F1 = gamma_m * k1 * x1 / (1 + k1 * x1 + k2 * x2) - (D / pi) ^ (1/2) * (2 * cb1 * t(n) ^ (1/2) - 4/3 * p ^ (1/2) * x1 - 2/3 * p ^ (1/2) * c1(n-1) - M1);
    F2 = gamma_m * k2 * x2 / (1 + k1 * x1 + k2 * x2) - (D / pi) ^ (1/2) * (2 * cb2 * t(n) ^ (1/2) - 4/3 * p ^ (1/2) * x2 - 2/3 * p ^ (1/2) * c2(n-1) - M2);
    d = vpasolve([F1 == 0,F2 == 0], [x1, x2]); % Solve for c1(n) and c2(n) % vpasolve gives numeric value
 
    % Address the elements of the structure
    e1 = d.x1;
    e2 = d.x2;
    
    % Arrange all the elements from low to high numbers
    g1 = sort(e1); 
    g2 = sort(e2);
    
    % Equations give three sets of values for x1 and x2, which should be both positive 
    c1(n) = g1(3);
    c2(n) = g2(3);
    % disp(c1(n));
    % disp(c2(n));
    
    gamma1(n) = gamma_m * k1 * c1(n) / (1 + k1 * c1(n) + k2 * c2(n));
    gamma2(n) = gamma_m * k2 * c2(n) / (1 + k1 * c1(n) + k2 * c2(n));
    % disp(gamma1(n));
    % disp(gamma2(n));
    
    S(n) = S0 + kb * T * gamma_m * log10(1 - (gamma1(n) + gamma2(n)) / gamma_m); % Surface pressure
    % disp(S(n));
end
clf;
 plot(t, c1, 'red');
 hold on
 plot(t, c2, 'yellow');
 plot(t, gamma1, 'blue');
 hold on
 plot(t, gamma2, 'purple');
% plot (t, S, 'green');
