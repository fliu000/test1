% Newton's method or gradient descent method for single component

D = 2.5E-10; % Diffusion coefficient (m2/s)
gamma_m = 3.2E18; % Surface excess coverage (molecule/m2)
c0 = 3.08E22; % Surface concentration (molecule/m3)
k = 1.44E-17; % Adsorption constant (m3/molecule)
kb =  1.38E-23; % Boltzmann constant (m2.kg/(s2.K)

Q = 10000; % Total time (s)
W = 1000; 
p = Q / W; % Discretizing time step
t = (1 : W+1);
c = (1 : W+1);
gamma = (1 : W+1);
gamma_1 = (3 : W+1);
gamma_2 = (3 : W+1);
S = (1 : W+1);

t(1) = 0;
gamma(1) = 0;
c(1) = 0;
S(1) = 0;

t(2) = 1;
gamma(2) = 2 * c0 * sqrt(D * p / pi);
c(2) = 1/k * gamma(2) / (gamma_m - gamma(2));
S(2) = - kb * 298 * gamma_m * log10(1 - gamma(2) / gamma_m);

for n = 3 : 5 %(W+1) 
    t(n) = (n - 1) * p;
    gamma_1(n) = gamma(n-1) + (gamma(n-1) - gamma(n-2));
    c(n) = 1/k * gamma_1(n) / (gamma_m - gamma_1(n));
    M = 0;
    for i = 1 : (n - 1)
        alpha = (i + 1) ^ (1/2) - i ^ (1/2);
        beta = (i + 1) ^ (3/2) - i ^ (3/2);
        M = M + 2 * p ^ (1/2) * (c(n-i+1) * alpha + (1/3 * beta - i * alpha) * (c(n-i) - c(n-i+1)));
    end
    
    gamma_2(n) = sqrt(D / pi) * (2 * c0 * sqrt(t(n)) - 4/3 * sqrt(p) * x - 2/3 * sqrt(p) * c(n-1) - M);
    
    if abs(abs(gamma_2(n)) - abs(gamma_1(n))) < 0.001
        gamma(n) = gamma_2(n);
        % disp(gamma(n));
    else
        gamma_1(n) = 1/2 * (gamma_1(n) + gamma_2(n));
        c(n) = 1/k * gamma_1(n) / (gamma_m - gamma_1(n));
    end
    
    disp(c(n));
    disp(gamma(n));    
    S(n) = - kb * 298 * gamma_m * log10(1 - gamma(n) / gamma_m); % Surface pressure
    disp(S(n));
end
clf;
% plot(t, c, 'red');
% hold on
% plot(t, gamma, 'blue');
% hold on
% plot (t, S, 'green');
